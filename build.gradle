group 'com.incarcloud'
version '2.0'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.+")
    }
}

apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter:1.5.1.RELEASE"){
        exclude module: "spring-boot-starter-logging"
    }
    compile("org.springframework.boot:spring-boot-starter-log4j2:1.5.1.RELEASE")
    compile("org.json:json:20160810")
    compile("com.aliyun.mns:aliyun-sdk-mns:1.1.8.3")
    compile("com.aliyun.openservices:tablestore:4.2.2")
    testCompile("junit:junit:4.12")
    testCompile("org.springframework.boot:spring-boot-starter-test:1.5.1.RELEASE")
}

task MarkGitVersion{
    doLast{
        def branch = "git symbolic-ref --short HEAD".execute().text.trim()
        def rev = "git rev-list --count HEAD".execute().text.trim()
        def hash = "git rev-parse --short HEAD".execute().text.trim()
        def hash160 = "git rev-parse HEAD".execute().text.trim()
        println("\tMark Git Version: " + branch + "." + rev + "@" + hash)

        def javaFile = new File("./src/main/java/com/incarcloud/rooster/gather/GitVer.jav_").text
        javaFile = javaFile
                .replace("\$branch\$", branch)
                .replace("\$rev\$", rev)
                .replace("\$hash\$", hash)
                .replace("\$hash160\$", hash160)

        def writer = new PrintWriter(new File("./src/main/java/com/incarcloud/rooster/gather/GitVer.java"))
        writer.print(javaFile)
        writer.close()
    }
}

compileJava{
    dependsOn MarkGitVersion
    options.encoding = "utf-8"
    options.compilerArgs << "-Xlint:unchecked"
}

test {
    systemProperties System.getProperties()

    def xTest = System.getProperty("test")
    if(xTest == null || !xTest.startsWith("online")) {
        exclude "com/incarcloud/rooster/**/*Online*.class"
        doFirst{
            println("\tSkipped all *Online* tests. Add '-Dtest=online*' to include them.")
        }
    }

    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

defaultTasks "build"